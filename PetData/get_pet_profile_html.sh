#This is a script to scrape lists generated by get_pets_list.sh and generate an html file for each website named for each pet
ws_pentago="https://ws.petango.com/webservices/adoptablesearch"

#Verify the input argument, print error then terminate the program when the input doesn't meet the requirement.
if [ -z "$1" -o $(echo "$1" | grep -E "cat|dog" | wc -l) -ne 1 ]; then
    echo "Must specify one input parameter, it can be either \"cat\" or \"dog\"."
    echo "Exit get_pet_profile_html.sh"
    exit
fi

name_id_url_list_txt="$1_name_id_subURL_list.txt"
echo $name_id_url_list_txt

if [ ! -f $name_id_url_list_txt ]; then
    echo "ERROR: $name_id_url_list_txt does not exist."
    echo "Exit get_pet_profile_html.sh"
    #exit
fi

#Iteratively generates HTMLs from lines of tags.
lines=$(cat $name_id_url_list_txt)

for line in $lines
do
    #echo "Here is a string" | grep -o -P '(?<=Here).*(?=string)'
    sub_url=$(echo "$line" | grep -o -P '(?<=href=").*(?=&css)')
    #pet_name=$(echo "$line" | grep -o -P '(?<=>).*(?=</a></div>)')
    
    if [ ! -z $sub_url ] || [ ! -z $pet_name ]; then
        
        pet_profile_url="$ws_pentago/$sub_url"
        pet_id=$(echo "$line" | grep -o -P '(?<=id=).*(?=&css=")')
        
        if [ $(echo $1 | grep -E "cat" | wc -l) -eq 1 ]; then
            wget -q -O "Cat/AttributeHTML/$(echo "$pet_id")_attributes.html" "$pet_profile_url"
        else
            wget -q -O "Dog/AttributeHTML/$(echo "$pet_id")_attributes.html" "$pet_profile_url"
        fi
    fi
done

#Notify the completion to the user.
echo "$1s' HTML downloads completed."
